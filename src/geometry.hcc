#include "algebra.h"

namespace CGAL {
	template<>
	class Algebraic_structure_traits<ExtendedRational>
		: public Algebraic_structure_traits_base<ExtendedRational, Field_tag>
	{
	};

	template<>
	class Real_embeddable_traits<ExtendedRational>
		: public INTERN_RET::Real_embeddable_traits_base<ExtendedRational, Tag_true>
	{
	};
}

template<typename GameTraits>
ObstacleSet<GameTraits>::
ObstacleSet (const_tan_handle moving, const tanset & fixed)
	: _impl(polygon::EMPTY)
{
	for (const_tan_handle i = fixed.begin(); i != fixed.end(); i++)
		if (i != moving)
			add_sum(moving, i);
}

template<typename GameTraits>
typename ObstacleSet<GameTraits>::point
ObstacleSet<GameTraits>::
closest (const point & p) const
{
	return p;
}

template<typename GameTraits>
void
ObstacleSet<GameTraits>::
add_sum (const_tan_handle fixed, const_tan_handle moving)
{
	
}

/*
** vim: ts=4 sw=4 cindent syntax=cpp
*/
